{"version":3,"sources":["components/ImageForm.jsx","components/ImageList.jsx","components/ImageBoard.jsx","reportWebVitals.js","index.js"],"names":["ImageForm","prop","useState","loc","setLoc","caption","setCaption","onSubmit","event","preventDefault","addPhoto","id","name","type","value","onChange","target","autoComplete","placeholder","className","ImageList","props","imagePane2","photos","map","photo","src","alt","App","setPhotos","counter","setCounter","useEffect","photoToAdd","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAyCeA,MAvCf,SAAmBC,GAEf,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAsBA,OACI,uBAAMC,SArBV,SAAsBC,GAClBA,EAAMC,iBAENR,EAAKS,SAASP,EAAKE,GACnBD,EAAO,IACPE,EAAW,KAgBX,UAEI,uBAAOK,GAAG,MAAMC,KAAK,MAAMC,KAAK,OAAOC,MAAOX,EAAKY,SAf3D,SAAsBP,GAClBJ,EAAOI,EAAMQ,OAAOF,QAc2DG,aAAa,MAAMC,YAAY,kBAF9G,IAEgI,uBAE5H,uBAAOP,GAAG,UAAUC,KAAK,UAAUC,KAAK,OAAOC,MAAOT,EAASU,SAbvE,SAA0BP,GACtBF,EAAWE,EAAMQ,OAAOF,QAYuEG,aAAa,MAAMC,YAAY,6BAJ9H,IAI2J,uBACvJ,yBAAQP,GAAG,iBAAgBE,KAAK,SAAhC,UAAyC,mBAAGM,UAAU,sBAAtD,0BCHGC,MA5Bf,SAAmBC,GAIf,IAAMC,EAAaD,EAAME,OAAOC,KAAI,SAAAC,GAAU,OAE1C,+BACI,qBAAKC,IAAKD,EAAMtB,IAAKwB,IAAI,KACzB,4BAAIF,EAAMpB,YAFLoB,EAAMd,OAcnB,OACI,6BACKW,KCmBEM,MAvCf,WACE,MAA4B1B,mBAAS,IAArC,mBAAOqB,EAAP,KAAeM,EAAf,KACA,EAA8B3B,mBAAS,GAAvC,mBAAO4B,EAAP,KAAgBC,EAAhB,KA4BA,OA1BAC,qBAAW,WACPH,EAAW,CACT,CACElB,GAAI,EACJR,IAAK,0DACLE,QAAQ,mDACR,CACAM,GAAI,EACJR,IAAK,iEACLE,QAAS,wBACT,CACAM,GAAI,EACJR,IAAK,0FACLE,QAAS,8CAEZ,IAYH,sBAAKc,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAWT,SAZf,SAAkBP,EAAKE,GAErB,IAAM4B,EAAa,CAAEtB,GAAImB,EAAS3B,MAAKE,WACvCwB,EAAU,GAAD,mBAAKN,GAAL,CAAaU,KACtBF,EAAWD,EAAU,GACrBI,QAAQC,IAAIZ,MAQV,cAAC,EAAD,CAAWA,OAAQA,QC1BVa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5832e087.chunk.js","sourcesContent":["import {useState} from 'react';\n\nfunction ImageForm(prop){\n\n    const [loc, setLoc] = useState('');\n    const [caption, setCaption] = useState('');\n\n    function handleSubmit(event){\n        event.preventDefault();\n        // const newPhoto = {loc, caption}\n        prop.addPhoto(loc, caption);\n        setLoc('');\n        setCaption('');\n    }\n\n    function handleNewLoc(event){\n        setLoc(event.target.value);\n    }\n\n    function handleNewCaption(event){\n        setCaption(event.target.value);\n    }\n\n\n\n\n\n    return (\n        <form onSubmit={handleSubmit}>           \n            {/* <label htmlFor=\"loc\">Enter the URL of a new meme to add it to the collection:</label> */}\n            <input id=\"loc\" name=\"loc\" type=\"text\" value={loc} onChange={handleNewLoc} autoComplete=\"off\" placeholder=\"New Meme URL:\"/> <br/>\n            {/* <label htmlFor=\"caption\"> Don't forget the caption! </label> */}\n            <input id=\"caption\" name=\"caption\" type=\"text\" value={caption} onChange={handleNewCaption} autoComplete=\"off\" placeholder=\"Enter your caption here:\"/> <br/>\n            <button id=\"addPhotoButton\"type=\"submit\"><i className=\"far fa-file-image\"></i> &nbsp; ADD A MEME</button>\n\n\n\n        </form>\n    )\n}\n\nexport default ImageForm;","// import ImageItem from \"./ImageItem\";\n\nfunction ImageList(props){\n    // const imagePane = props.photos.map(photo => <ImageItem key={photo.id} {...photo}/>);\n    // {console.log(ImagePane)};\n\n    const imagePane2 = props.photos.map(photo => {return (\n        \n        <li key={photo.id}>\n            <img src={photo.loc} alt='' />\n            <p>{photo.caption}</p>\n        </li>\n    )});\n\n    // function imageItem(photo){\n    //     return(<li>\n    //         <img src={props.loc} alt='' />\n    //         <p>{props.caption}</p>\n    //     </li>\n    //     )\n    // }\n\n    return(\n        <ul>\n            {imagePane2}\n        </ul>    \n    )\n\n}\n\nexport default ImageList;","import {useState, useEffect} from 'react';\nimport ImageForm from \"./ImageForm\";\nimport ImageList from \"./ImageList\";\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n  const [counter, setCounter] = useState(4);\n\n  useEffect( () => {\n      setPhotos ([\n        {\n          id: 1,\n          loc: 'https://miro.medium.com/max/1000/0*Ua695vjzFHV6VNOX.png',\n          caption: `What more could you expect from any one person?`,\n        },{\n          id: 2,\n          loc: 'https://miro.medium.com/max/1400/1*Hgs78-x-BwXk1inYQKjyOg.jpeg',\n          caption: 'Seems about right...',\n        },{\n          id: 3,\n          loc: 'https://www.memesmonkey.com/images/memesmonkey/1f/1f3e7d06fab98d8d499bf0bfc630e203.jpeg',\n          caption: 'God help you if you miss a parenthesis',\n        }\n  ])}, []);\n\n  function addPhoto(loc, caption) {\n    // {loc, caption} = newPhoto;\n    const photoToAdd = { id: counter, loc, caption};\n    setPhotos([...photos, photoToAdd]);\n    setCounter(counter + 1);\n    console.log(photos);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>CODING MEMES</h1>\n      <ImageForm addPhoto={addPhoto}/>\n      <ImageList photos={photos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/ImageBoard.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}